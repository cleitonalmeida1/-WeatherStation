/*
 * FaultInjector.cpp
 *
 *  Created on: 01/03/2016
 *      Author: Cleiton Gonï¿½alves
 */

#include "FaultInjector.h"

FaultInjector::FaultInjector() {

}

FaultInjector::~FaultInjector() {
	// TODO Auto-generated destructor stub
}

void FaultInjector::crash(long t) {

	int *ptr = NULL;
	*ptr = 1;
}

void FaultInjector::infinityLoop(long t) {
	while (true);
}

double average ( int num, ... )
{
  va_list arguments;                     // A place to store the list of arguments
  double sum = 0;

  va_start ( arguments, num );           // Initializing arguments to store all values after num
  for ( int x = 0; x < num; x++ )        // Loop until all numbers are added
    sum += va_arg ( arguments, double ); // Adds the next value in argument list to sum.
  va_end ( arguments );                  // Cleans up the list

  return sum / num;                      // Returns the average
}

void FaultInjector::injectFaultRandomlyMemoryRegion(long t){

}

void FaultInjector::injectFaultMemoryRegion(){

}

void FaultInjector::injectFaultAddressMemorySpecific(){

}
